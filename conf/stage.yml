---

# Setup firewalls using upcloud api
- include: upcloud.yml

# Example of standard single server setup without production services (monitoring, logging etc.)
- hosts: stage
  become: false
  become_method: sudo
  user: root
  roles:
   - { role: base, tags: [ 'base' ] }
   - { role: papertrail, tags: [ 'papertrail' ] }
   - { role: varnish, tags: [ 'varnish' ] }
   - { role: dbserver, tags: [ 'dbserver' ] }
   - { role: drupal-db, tags: [ 'drupal-db' ] }
   - { role: certbot, tags: [ 'certbot' ] }
   - { role: sslterminator, tags: [ 'sslterminator' ] }
   - { role: nginx, tags: [ 'nginx' ] }
   - { role: php-fpm, tags: [ 'php-fpm' ] }
   - { role: drush, tags: [ 'drush' ] }
   - { role: drupal-log, tags: [ 'drupal-log' ] }
   - { role: fsa_elasticsearch, tags: [ 'elasticsearch' ] }
   - { role: wkhtmltopdf, tags: [ 'wkhtmltopdf' ] }
   - { role: newrelic-sysmon, tags: [ 'newrelic-sysmon' ] }
   - { role: newrelic-infra, tags: [ 'newrelic-infra' ] }

  vars_files:
  - stage-vars.yml
  - error-page.yml

  tasks:
  # Drupal cron job
  #- cron: name="Example Drupal cron job" minute="*/2" job="su nginx --shell=/bin/sh -c '/usr/lib/composer/vendor/bin/drush --root=/var/www/example.com/current elysia-cron run > /dev/null 2>&1'" state="present"

    - name: "Run drupal cronjob at even minutes"
      cron:
        name: "Run Drupal cronjobs with drush"
        minute: "*/2"
        job: "/usr/lib/composer/vendor/bin/drush --root=/var/www/fsa/current/web cron"
        state: "present"
        user: nginx
      tags: ['cron']
    - name: "Fetch Alerts from Epimorphics server"
      cron:
        name: "Run Migrate API task to pull alerts from the API"
        minute: "*/10"
        job: "/usr/lib/composer/vendor/bin/drush --root=/var/www/fsa/current/web mi --tag=alerts"
        state: "present"
        user: nginx
      tags: ['cron']
      #    - name: "Fetch Authority updates from FHRS API"
      #cron:
      #  name: "Run Migrate API task to pull authority updates from the API"
      #  hour: "4"
      #  job: "/usr/lib/composer/vendor/bin/drush --root=/var/www/fsa/current/web mim --tag=authorities"
      #  state: "present"
      #  user: nginx
      #tags: ['cron']
#    - name: "Fetch FHRS establishments from the API"
#      cron:
#        name: "Run Migrate API task twice a day to fetch FHRS establishment updates from the API"
#        minute: "0"
#        hour: "23,7"
#        job: "/usr/lib/composer/vendor/bin/drush --root=/var/www/fsa/current/web mi --tag=establishments"
#        state: "present"
#        user: nginx
#      tags: ['cron']

  vars:
    wkv_site_env: stage

    # You can set custom variables if the same value is used in multiple places so it can be easily changed here
    # You can use it anywhere after this using " {{ variable_name }}"
    domain_name: fsa.stage.wunder.io
    
    # Additional envs
    php_env_vars:
      - key: "WKV_SITE_ENV"
        value: "{{ wkv_site_env }}"
      - key: "DRUPAL_HASH_SALT_STAGE"
        value: "{{ drupal_hash_salt }}"
      - key: "DRUPAL_HASH_SALT"
        value: "{{ drupal_hash_salt }}"
     
    php_env_vars_include_db: True

    partition_var_log: False
    partition_var_lib_mysql: False

    # How to assign memory for each role and set the correct
    # memory_app and memory_db define how much total system memory is allocated to each.
    # On dedicated DB server memory_db should max be around 80% of total memory and would ideally fit the whole db + some more.
    memory_db: 1024 # In MB
    memory_app: 1024 # In MB

    # NOTE: memory_app needs to be at least 2x php_memory_limit
    # NOTE: ALWAYS leave some spare memory for the server
    # php memory limits etc are in variables.yml

    # Let's encrypt. Always use SSL if possible!
    certbot_email: support@wundertools.com
    certbot_domains:
      - "{{Â domain_name }}"
    certbot_renewal_docroot: /var/www/letsencrypt-auto

    # On dev and stage it's good idea to protect the site with htauth
    basicauth_enabled: True
    basicauth_username: fsawunder
    basicauth_password: "{{ basicauth_pass }}"
    # Basic auth can also be disabled for certain ip's
    basicauth_ip:
      - address: 84.20.132.177
      - address: 87.94.15.10
      - address: 94.237.27.124
      - address: 94.237.33.88
      - address: 83.136.248.231

    # Apps I want to run on this server
    apps:
      - server_name: "{{ domain_name }}"
        http_port: 8080
        docroot: /var/www/fsa/current/web

    create_docroot: True

    # This server also acts as a load balancer
    varnish:
      port: 8081
      memory: 512M
      custom_error_template: "{{ varnish_error_template }}"
      directors:
        - name: stage
          host: "{{ domain_name }}"
          backends:
            - name: stage_http
              address: 127.0.0.1
              port: 8080

    # Use https for this host
    sslterminators:
      - server_name: "{{ domain_name }}"
        ssl_certificate: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
        ssl_certificate_key: "/etc/letsencrypt/live/{{ domain_name }}/privkey.pem"
        backends:
          - 127.0.0.1:8081 # Pass it to local varnish

    # Make sure all traffic is redirected to https
    httpforwards:
      - server_name: "{{ domain_name }}"
        forwarded_domains: "{{ domain_name }}"
        http_port: 80

    databases:
      - name: drupal
        user: drupal
        pass: "{{ drupal_db_password }}"
        host: localhost
        hosts:
          - "127.0.0.1"
          - "::1"
          - "localhost"

    elasticsearch_heap_size: 512m

    ## Papertrail ##
    papertrail_enabled: True
    papertrail_remote_syslog2_version: "0.16"
    papertrail_conf: "/etc/log_files.yml"
    papertrail_logs:
      - /var/log/secure
      - /var/log/maillog

    # papertrail host and port defined in prod-vars.yml

    # Define additional papertrail logs from nginx (from nginx role)
    nginx_papertrail_follow:
      - /var/log/nginx/http-*error.log

    php_fpm_papertrail_follow:
      - /var/log/php-fpm/www-error.log

    ## Newrelic ##
    newrelic_enabled: True
    newrelic_infra_enabled: True
 
